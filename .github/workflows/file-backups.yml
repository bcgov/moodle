name: Run file backups for Moodle


on:
  schedule:
    - cron: '0 9 * * *'

jobs:
  fileBackup:
    name: Trigger file backups
    strategy:
      fail-fast: false
      #Run file backups for multiple environments
      matrix:
        namespace: [950003-dev, 950003-test, 950003-prod]
    runs-on: ubuntu-latest
    env:
      BRANCH: main
      APP: moodle
      NO_OF_DAYS: +2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Log in to OpenShift
        run: |
          oc login --token=${{ secrets.SA_TOKEN }} --server=https://api.silver.devops.gov.bc.ca:6443
      - name: Run file backups
        run: |
          oc project ${{ matrix.namespace }}
          echo "Current namespace is ${{ matrix.namespace }}"
          podNames=$(oc get pods -l deploymentconfig=moodle --field-selector=status.phase=Running -o name)
          echo $podNames
          
          #Backup moodledata to a backup PVC pointing to /tmp/file-backups
          #Purge backups older than NO_OF_DAYS to reclaim space
          # Only Exec into one pod, and place the backups in the shared and mounted backup PVC
            oc exec ${podNames[0]} -- bash -c "
              mkdir -p /tmp/file-backups && \
              find /tmp/file-backups/ -maxdepth 1 -mtime ${NO_OF_DAYS} -type d -exec rm -r  {} \; && \
              echo 'PROJECT NAMESPACE is: '  ${{ matrix.namespace }} && \
              zip -r /tmp/file-backups/filedir-${{ matrix.namespace }}-$(date "+%Y.%m.%d-%H.%M.%S").zip /vendor/moodle/moodledata/persistent/filedir/ /vendor/moodle/moodledata/persistent/models
              if [ -d "/vendor/moodle/moodledata/persistent/models" ]; then
                zip -r /tmp/file-backups/models-${{ matrix.namespace }}-$(date "+%Y.%m.%d-%H.%M.%S").zip  /vendor/moodle/moodledata/persistent/models 
              fi
              "
