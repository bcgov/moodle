# Static Deploy On Openshift
# Builds and Deploys merged PR's to persistent pods/services/routes/etc in the OpenShift Dev environment.
name: Deploy on Openshift
  
on:
  # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows
  push:
    # Edit to the branch(es) you want to build and deploy on each push.
    branches: [ main ]

jobs:
  #Print variables for logging and debugging purposes
  checkEnv:
    name: Check Env variables
    runs-on: ubuntu-latest
    steps:
      - name: Print Env Vars
        run: |
          echo Git Base Ref: ${{ github.base_ref }}
          echo Git Build ID: ${{ github.event.number }}
          echo Git Pull Request Ref: ${{ github.event.pull_request.head.sha }}
          echo OC CLI Version: $(oc version)
  
  #Build the app

  build:
    name: Build APP
    runs-on: ubuntu-latest
    # if: ${{ github.event.pull_request.merged == true}}
    env:
      BUILD_ID: ${{ github.event.number }}
      BUILD_NAMESPACE: 950003-tools
      BRANCH: main
      BUILD_TAG: latest
      APP: moodle-gamma
      #KC_AUTH_URL: https://dev.oidc.gov.bc.ca/auth/
    steps:
      # Checkout the PR branch
      - name: Print env
        run: |
          echo BUILD ID: $BUILD_ID
          echo BUILD NAMESPACE: $BUILD_NAMESPACE
          echo BRANCH: $BRANCH
      - name: Checkout Target Branch
        uses: actions/checkout@v1
      # Log in to OpenShift.
      # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
      # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
      - name: Log in to OpenShift
        run: |
          oc login --token=${{ secrets.SA_TOKEN }} --server=https://api.silver.devops.gov.bc.ca:6443
      # Build the app images
      - name: Build App images
        working-directory: "./openshift/app"
        run: |
          test -n "${BRANCH}"
          test -n "${BUILD_NAMESPACE}"
          echo "BUILIDING ${APP} with tag: ${BUILD_TAG}"
                oc -n ${BUILD_NAMESPACE} process -f docker-build.yml \
                -p TAG=${BUILD_TAG} -p SOURCE_REPOSITORY_REF=${BRANCH} \
                -p BASE_IMAGE_NAME="php7.3" -p BASE_IMAGE_TAG="latest" \
                -p BASE_IMAGE_REPO="aro.jfrog.io/moodle/" \
                -p SOURCE_CONTEXT_DIR=moodle \
                -p NAME=${APP} | oc -n ${BUILD_NAMESPACE} apply -f -
          oc -n ${BUILD_NAMESPACE} start-build bc/${APP} --wait
  
  # # Deploy App images in Dev
  # deployDev:
  #   name: Deploy APP to Dev environment
  #   runs-on: ubuntu-latest
  #   env:
  #     BUILD_ID: ${{ github.event.number }}
  #     NAMESPACE: 950003-dev
  #     BUILD_NAMESPACE: 950003-dev
  #     BRANCH: main
  #     APP: moodle-gamma
  #     APP_HOST: moodle-gamma-950003-dev.apps.silver.devops.gov.bc.ca
  #   needs:
  #     - build
  #   steps:
  #     # - name: Print env
  #     #   run: |
  #     #     echo BUILD ID: $BUILD_ID
  #     #     echo BUILD NAMESPACE: $BUILD_NAMESPACE
  #     #     echo BRANCH: $BRANCH
  #     - name: Checkout Target Branch
  #       uses: actions/checkout@v1

  #     # Log in to OpenShift.
  #     # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
  #     # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
  #     - name: Log in to OpenShift
  #       run: |
  #         oc login --token=${{ secrets.SA_TOKEN }} --server=https://api.silver.devops.gov.bc.ca:6443
  #     - name: Build and deploy the app
  #       run: | 
  #         # oc project ${NAMESPACE}
  #         # echo "Current namespace is ${NAMESPACE}"
  #         # oc start-build bc/moodle-app
  #         # oc logs -f bc/moodle-app
  #         # echo "Getting deployment status..."
  #         # oc rollout status deployment/moodle-app
  #         # echo "Listing pods.."
  #         # oc get pods|grep moodle-app
  #         # export ROUTE="$(oc get route moodle-route -o jsonpath='{.spec.host}')"
  #         # echo "moodle-app is exposed at $ROUTE"   

  #         test -n "${NAMESPACE}"
  #         test -n "${BUILD_NAMESPACE}"
  #         test -n "${BRANCH}"
  #         echo "Current namespace is $NAMESPACE"
  #         # oc -n ${NAMESPACE} process -f openshift/app-template.yaml \
  #         #   -p NAME=${APP} \
  #         #   -p HOST_NAME=${APP_HOST} \
  #         #   -p BUILD_NAMESPACE=${BUILD_NAMESPACE} | oc -n ${NAMESPACE} apply -f -
  #         oc -n ${NAMESPACE} process -f openshift/app/moodle-dc-persistent-template-new.json \
  #             -p APP_NAME=${APP} \
  #             -p SITE_URL=${APP_HOST} \
  #             -p DB_HOST=mysql \
  #             -p MOODLE_MEMORY_LIMIT=1Gi \
  #             -p PROJECT_NAMESPACE=950003-dev \
  #             -p DB_SERVICE_NAME=mysql \
  #             -p MOODLE_VOLUME_CAPACITY=10Gi \
  #             -p DB_NAME=moodle \
  #             -p DB_USER=moodle \
  #             -p HTTP_PORT=8080 \
  #             -p DB_PORT=3306 \
  #             -p APACHE_DOCUMENT_ROOT="/vendor/moodle/moodle" \
  #             -p SITE_NAME=Moodle \
  #             -p DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
  #             -p GIT_PROJECT=moodle \
  #             -p MOODLE_DATA_PATH="/vendor/moodle/moodledata/persistent" \
  #             -p MOODLE_DATA_MOUNT_PATH="/vendor/moodle/moodledata/persistent" \
  #             -p BUILD_IMAGE="aro.jfrog.io/moodle/moodle:950003-dev" \
  #             -p GIT_URL="https://github.com/moodle/moodle.git" \
  #             -p GIT_TAG=openshift \
  #             -p GITHUB_AUTH_TOKEN="${{ secrets.AUTH_TOKEN }}" | \
  #              oc -n ${NAMESPACE} apply -f -
  #         oc rollout status dc/moodle-beta
  #         oc project ${NAMESPACE}     
  #         echo "Listing pods.."
  #         oc get pods|grep moodle-beta
  #         export ROUTE="$(oc get route moodle-beta -o jsonpath='{.spec.host}')"
  #         echo "${APP} is exposed at 'https://'$ROUTE"   
